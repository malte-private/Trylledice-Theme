<div class="grid grid-cols-12 ">

  <div class="flex flex-col items-start col-span-2 col-start-1 row-start-2 gap-4 pt-8">
    {%- render 'filter' -%}



    <details class="group">
      <summary class="list-none inline-flex gap-1 before:group-open:rotate-0 before:self-center appearance-none before:content-[''] before:inline-block before:bg-small-arrow before:-rotate-90 before:w-4 before:transition-transform duration-75 before:bg-contain before:bg-no-repeat before:h-4 cursor-pointer ">
        <div>
          <span class="text-xl body body-text-color">Dice Type</span>

        </div>
      </summary>
      <div>
        <ul class="flex flex-wrap gap-3">
          {%- assign activeCollection = collection.title -%}
          {%assign activeHandle = collection.handle %}
          {% for collection in collections offset: 1 %}
            <li class="relative flex items-center gap-2 px-4 py-1 border-2 border-main-accent {% if collection.handle == activeHandle %} text-main-primary bg-main-accent {% endif %}">
              {{ collection.title | link_to: collection.url}}
            </li>
          {% endfor %}
        </ul>
      </div>
    </details>

    {%- comment -%}
      {%- for filter in collection.filters -%}
      {%- if filter.param_name == "filter.v.price" -%}
      <details class="group">
      <summary class="list-none inline-flex gap-1 before:group-open:rotate-0 before:self-center appearance-none before:content-[''] before:inline-block before:bg-small-arrow before:-rotate-90 before:w-4 before:transition-transform duration-75 before:bg-contain before:bg-no-repeat before:h-4 cursor-pointer ">
      <div>
      <span class="text-xl body body-text-color">{{ filter.label }}</span>
      </div>
      </summary>
      <div>
      <div class="filter-group-display__price-range">
      <span>{{filter.min_value.value}}</span>
      <input type="range" class="text-green-400" min="{{filter.min_value.value | money_without_currency| replace: ',', ''}}" max="">
      <div class="filter-group-display__price-range-from">


      <input name="{{ filter.min_value.param_name }}" id="Filter-{{ filter.min_value.param_name }}"
      {% if filter.min_value.value -%}
      value="{{ filter.min_value.value | money_without_currency | replace: ',', '' }}"
      {%- endif %}
      type="number" placeholder="0" min="0" max="{{ filter.range_max | money_without_currency | replace: ',', '' }}">

      <label for="Filter-{{ filter.min_value.param_name }}">From</label>
      </div>
      <div class="filter-group-display__price-range-to">
      <span>{{ cart.currency.symbol }}</span>

      <input name="{{ filter.max_value.param_name }}" id="Filter-{{ filter.max_value.param_name }}"
      {% if filter.max_value.value -%}
      value="{{ filter.max_value.value | money_without_currency | replace: ',', '' }}"
      {%- endif %}
      type="number" placeholder="{{ filter.range_max | money_without_currency | replace: ',', '' }}" min="0" max="{{ filter.range_max | money_without_currency | replace: ',', '' }}">

      <label for="Filter-{{ filter.max_value.param_name }}">To</label>
      </div>
      </div>

      <div class="filter-group-display__submit">
      <input type="submit" value="Apply">
      </div>
      </div>
      </details>
      {%- endif -%}
      {%endfor%}
    {%- endcomment -%}


  </div>



  <h1 class="col-start-4 col-end-10 text-center h1 heading-text-color">Dice collections</h1>
  <label class="flex flex-row col-start-10 col-end-13 row-start-1 gap-1 menu" for="sort-by">Sort by
    <select id="sort-by" class="h-6 p-0 pr-8 border-none menu text-ellipsis bg-inherit">
      {% assign sort_by = collection.sort_by | default: collection.default_sort_by %}

      {% for option in collection.sort_options %}
        <option value="{{ option.value }}" {% if option.value == sort_by %}selected="selected"{% endif %}>
          {{ option.name }}
        </option>
      {% endfor %}
    </select>
  </label>
  <div class="col-start-3 row-start-2 col-span-full">
    {% paginate collection.products by 9 %}


      <div class="grid items-start grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-x-20 justify-items-center auto-rows-fr">
        {% for product in collection.products %}

          {%- if product.available -%}
            <div class="w-48 gap-44">
              {%- render 'ornament-top' -%}


              <a href=" {{ product.url | within: collection }} ">
                <img class="object-contain aspect-square" src="{{ product.featured_image.src | img_url: 'large' }}" data-product-image alt="{{ product.featured_image.alt | escape }}">
              </a>
              <div class="flex flex-col items-center justify-center gap-2 pt-5 text-center heading-text-color h2">
                <a class="text-3xl" href="{{ product.url | within: collection }}">{{ product.title }}</a>
                {%- unless product.available == false -%}
                  <p class="text-xl heading-text-color">{{ product.price | money }}</p>
                {%- endunless -%}
              </div>
              {%- render 'ornament-bottom' -%}
            </div>
          {%elsif collection.title == "Sold"%}
            <div class="w-48 gap-44">
              {%- render 'ornament-top' -%}
              <a href=" {{ product.url | within: collection }} ">
                <img class="object-contain aspect-square" src="{{ product.featured_image.src | img_url: 'large' }}" data-product-image alt="{{ product.featured_image.alt | escape }}">
              </a>
              <div class="flex flex-col items-center justify-center gap-2 pt-5 text-center heading-text-color h2">
                <a class="text-3xl" href="{{ product.url | within: collection }}">{{ product.title }}</a>
                {%- unless product.available == false -%}
                  <p class="text-xl heading-text-color">{{ product.price | money }}</p>
                {%- endunless -%}
                <p class="text-xl">Sold</p>
              </div>
              {%- render 'ornament-bottom' -%}


            </div>
          {%- endif -%}
        {% endfor %}
      </div>
      {% if paginate.pages > 1 %}
        {{ paginate | default_pagination }}
      {% endif %}
    {% endpaginate %}

  </div>
</div>


<script>

  // const productImages = document.querySelectorAll("[data-product-image]");
// productImages.forEach((el, idx) => {
// el.src = {{ product.images[idx] | img_url: 'large' }};
// console.log({{product.images}})
// })

  Shopify.queryParams = {};

// Preserve existing query parameters
  if (location.search.length) {
    var params = location.search.substr(1).split('&');

    for (var i = 0; i < params.length; i++) {
      var keyValue = params[i].split('=');

      if (keyValue.length) {
        Shopify.queryParams[decodeURIComponent(keyValue[0])] = decodeURIComponent(keyValue[1]);
      }
    }
  }

// Update sort_by query parameter on select change
  document.querySelector('#sort-by').addEventListener('change', function(e) {
    var value = e.target.value;

    Shopify.queryParams.sort_by = value;
    location.search = new URLSearchParams(Shopify.queryParams).toString();
  });
</script>